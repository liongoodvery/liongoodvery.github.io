I"4<h2 id="主题和样式">主题和样式</h2>

<h3 id="material-design简介">Material Design简介</h3>

<p>Material Design是谷歌新的设计语言，谷歌希望寄由此来统一各种平台上的用户体验，Material Design的特点是干净的排版和简单的布局，以此来突出内容。</p>

<p>Material Design对排版、材质、配色、光效、间距、文字大小、交互方式、动画轨迹都做出了建议，以帮助设计者设计出符合Material Design风格的应用。</p>

<p>更多详情请见Material Design文档：</p>

<p>中文版网站 <a href="http://design.1sters.com/">http://design.1sters.com/</a></p>

<p>英文版 <a href="http://www.google.com/design/spec/material-design/introduction.html">http://www.google.com/design/spec/material-design/introduction.html</a></p>

<h3 id="material-design使用">Material Design使用</h3>

<p>作为我们开发者，最关心的还是如何在项目中使用Material Design风格：</p>

<ol>
  <li>设置应用的 <code class="highlighter-rouge">targetSdkVersion</code> 和 <code class="highlighter-rouge">targetSdkVersion</code> 为21</li>
  <li>在values目录下的style资源文件中创建一个style，让其继承自 <code class="highlighter-rouge">android:Theme.Material</code></li>
  <li>在AndroidManifest中指定应用的主题或者Activity的主题为我们设定的样式</li>
</ol>

<p>谷歌官方我们提供了三种配色风格的Material Design样式：</p>

<ol>
  <li>黑色主题 <code class="highlighter-rouge">Theme.Material</code></li>
  <li>明亮主题 <code class="highlighter-rouge">Theme.Material.Light</code></li>
  <li>明亮主题黑色ActionBar <code class="highlighter-rouge">Theme.Material.Light.DarkActionBar</code></li>
</ol>

<p>我们也可以继承系统提供的Material Design样式，进行配色修改：</p>

<p><img src="ThemeColors.png" alt="Mou icon" /></p>

<ol>
  <li><code class="highlighter-rouge">android:colorPrimaryDark</code> 应用的主要暗色调，statusBarColor默认使用该颜色</li>
  <li><code class="highlighter-rouge">android:statusBarColor</code> 状态栏颜色，默认使用colorPrimaryDark</li>
  <li><code class="highlighter-rouge">android:colorPrimary</code> 应用的主要色调，actionBar默认使用该颜色</li>
  <li><code class="highlighter-rouge">android:windowBackground</code> 窗口背景颜色</li>
  <li><code class="highlighter-rouge">android:navigationBarColor</code> 底部栏颜色</li>
  <li><code class="highlighter-rouge">android:colorForeground</code> 应用的前景色，ListView的分割线，switch滑动区默认使用该颜色</li>
  <li><code class="highlighter-rouge">android:colorBackground</code> 应用的背景色，popMenu的背景默认使用该颜色</li>
  <li><code class="highlighter-rouge">android:colorAccent</code> 一般控件的选种效果默认采用该颜色</li>
  <li><code class="highlighter-rouge">android:colorControlNormal</code> 控件的默认色调　</li>
  <li><code class="highlighter-rouge">android:colorControlHighlight</code> 控件按压时的色调</li>
  <li><code class="highlighter-rouge">android:colorControlActivated</code> 控件选中时的颜色，默认使用colorAccent</li>
  <li><code class="highlighter-rouge">android:colorButtonNormal</code> 默认按钮的背景颜色</li>
  <li><code class="highlighter-rouge">android:textColor</code> Button，textView的文字颜色</li>
  <li><code class="highlighter-rouge">android:textColorPrimaryDisableOnly</code> RadioButton checkbox等控件的文字</li>
  <li><code class="highlighter-rouge">android:textColorPrimary</code> 应用的主要文字颜色，actionBar的标题文字默认使用该颜色</li>
</ol>

<p>主题不仅可以对<code class="highlighter-rouge">Application</code>和<code class="highlighter-rouge">Activity</code>使用，也可以对某一个控件单使用，或者是在xml布局中给一个根节点控件设置android:theme属性，来修改它和它所有子控件的主题。
如果我们要对特定控件实例做自定义修改，更建议大家可以通过控件自身的API进行设置修改。</p>

<h3 id="material-design兼容性">Material Design兼容性</h3>

<p>Material Design主题只有在API级别为21以上才可使用，在v7支持库中提供了部分控件的Material Design主题样式，如果想使应用在android的所有版本上都能统一风格，我们可以对控件效果做自定义或者使用一些第三方的兼容包。目前最有效的做法是针对21版本创建value－21资源目录，使用Material Design风格主题，在其他版本使用v7的Theme.AppCompat.Light风格主题。</p>
:ET